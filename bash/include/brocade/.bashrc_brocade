# File: .bashrc_brocade
#
# Description: Include brocade-specific paths/aliases/shortcuts for bashrc


#**************************************************
# ***** Paths *****
#**************************************************

# Define base Git directory, if exists
export BASE_GIT_DIR="$(git rev-parse --show-toplevel 2>/dev/null)"

# Define base project directory
export BASE_PROJ_DIR="$BASE_GIT_DIR/vobs/projects/springboard"

# Define Brocade-specific source directory
export SOURCE_DIR="$BASE_PROJ_DIR/fabos/src"

# Define path to zzz drive
export ZZZ_DIR=$(/tools/bsnbld/scripts/gittools/get_my_workspace)

# Append PATH variable with emake wrapper script
export PATH=$PATH:/tools/bsneng/bin

# Append PATH variable with FOS tools
export PATH=$PATH:/projects/bsnswtools/bin/fos


#**************************************************
# ***** Commands *****
#**************************************************

# Function: commands
#
# Description: List available commands. Whenever a command is added or
#		updated, this should be as well.
#
brocade_commands() {
	echo "Brocade-specific commands:"
	echo "  * git_repo : cd into directory containing all git repos"
	echo "  * src      : cd into src directory"
	echo "  * build    : cd into build directory"
	echo "  * make_dir : cd into make directory"
	echo "  * scratch  : cd into scratch directory"
}


# Function: git_repo
#
# Description: cd into directory containing all git repos in zzz drive. If an
# 		argument is provided, cd directly into the specified git repo and
# 		re-source bashrc to set git-specific configuration. If argument is
# 		invalid, list valid git repos.
#
# Input Parameters:
# 		Git repo:							Git repo to cd into
#
git_repo() {
	if [ -z "$1" ]; then
		cd "$ZZZ_DIR/git"
	else
		if [ -d "$ZZZ_DIR/git/$1" ]; then
			cd "$ZZZ_DIR/git/$1"

			# Re-source .bashrc after in git repo
			source ~/.bashrc
		else
			echo "Git repo $1 doesn't exist. Please choose from:"
			echo
			ls -1 "$ZZZ_DIR/git"
			echo
			cd "$ZZZ_DIR/git"
		fi
	fi
}


# Function: build
#
# Description: cd into build directory. If an argument is provided, cd directly
# 		into the specified swbd src directory. If argument is invalid, list
# 		valid swbds.
#
# Input Parameters:
# 		Git repo:							Git repo to cd into
#
build() {
	# Check if argument provided
	if [ -z "$1" ]; then
		cd "$BASE_PROJ_DIR/build"
	else
		if [ -d "$BASE_PROJ_DIR/build/swbd$1/fabos/src" ]; then
			cd "$BASE_PROJ_DIR/build/swbd$1/fabos/src"
		else
			echo "swbd$1 doesn't exist. Please choose from:"
			echo
			ls -1 "$BASE_PROJ_DIR/build/" | grep "swbd" | grep -v ".log"
			echo
			cd "$BASE_PROJ_DIR/build"
		fi
	fi
}


# Function: src
#
# Description: cd into src directory.
#
src() {
	cd $SOURCE_DIR
}


# Function: make_dir
#
# Description: cd into make directory.
#
make_dir() {
	cd "$BASE_PROJ_DIR/make"
}


# Function: scratch
#
# Description: cd into scratch directory.
#
scratch() {
	cd "/scratch/fos_brm/pe413109"
}
